#############################################################
# Kafka Cluster (3x ZooKeeper, 3x Kafka)                    #
#############################################################
#https://docs.confluent.io/current/installation/docker/image-reference.html
---
version: '2.4'
services:

  #############################################################
  # Apache Zookeeper                                          #
  #############################################################
  zookeeper1:
    image: confluentinc/cp-zookeeper:${VERSION_CONFLUENT}
    hostname: zookeeper1
    container_name: zookeeper1
    restart: always
    ports:
    - 12181:2181
    networks:
      default:
        aliases:
        - zookeeper
    volumes:
      - zookeeper1:/var/lib/zookeeper/data
    # https://docs.confluent.io/current/zookeeper/deployment.html
    # https://docs.confluent.io/current/installation/docker/config-reference.html#zk-configuration
    environment:
      ZOOKEEPER_SERVER_ID: 1 # (required in cluster mode) Sets the server ID in the myid file, which consists of a single line that contains only the text of that machine’s ID.
      ZOOKEEPER_CLIENT_PORT: 2181 # (required) This is the port where ZooKeeper clients will listen on. This is where the Brokers will connect to ZooKeeper.
      ZOOKEEPER_SERVERS: zookeeper1:2888:3888;zookeeper2:2888:3888;zookeeper3:2888:3888
      ZOOKEEPER_TICK_TIME: 2000 # (default: 3000) The unit of time for ZooKeeper translated to milliseconds. This governs all ZooKeeper time dependent operations. It is used for heartbeats and timeouts especially.
      # The initLimit and syncLimit are used to govern how long following ZooKeeper servers can take to initialize with the current leader and how long they can be out of sync with the leader.
      ZOOKEEPER_INIT_LIMIT: 5 # (default: 10)
      ZOOKEEPER_SYNC_LIMIT: 2 # (default: 5)
  zookeeper2:
    image: confluentinc/cp-zookeeper:${VERSION_CONFLUENT}
    hostname: zookeeper2
    container_name: zookeeper2
    restart: always
    ports:
    - 22181:2181
    networks:
      default:
        aliases:
        - zookeeper
    volumes:
      - zookeeper2:/var/lib/zookeeper/data
    # https://docs.confluent.io/current/zookeeper/deployment.html
    # https://docs.confluent.io/current/installation/docker/config-reference.html#zk-configuration
    environment:
      ZOOKEEPER_SERVER_ID: 2 # (required in cluster mode) Sets the server ID in the myid file, which consists of a single line that contains only the text of that machine’s ID.
      ZOOKEEPER_CLIENT_PORT: 2181 # (required) This is the port where ZooKeeper clients will listen on. This is where the Brokers will connect to ZooKeeper.
      ZOOKEEPER_SERVERS: zookeeper1:2888:3888;zookeeper2:2888:3888;zookeeper3:2888:3888
      ZOOKEEPER_TICK_TIME: 2000 # (default: 3000) The unit of time for ZooKeeper translated to milliseconds. This governs all ZooKeeper time dependent operations. It is used for heartbeats and timeouts especially.
      # The initLimit and syncLimit are used to govern how long following ZooKeeper servers can take to initialize with the current leader and how long they can be out of sync with the leader.
      ZOOKEEPER_INIT_LIMIT: 5 # (default: 10)
      ZOOKEEPER_SYNC_LIMIT: 2 # (default: 5)
  zookeeper3:
    image: confluentinc/cp-zookeeper:${VERSION_CONFLUENT}
    hostname: zookeeper3
    container_name: zookeeper3
    restart: always
    ports:
    - 32181:2181
    networks:
      default:
        aliases:
        - zookeeper
    volumes:
      - zookeeper3:/var/lib/zookeeper/data
    # https://docs.confluent.io/current/zookeeper/deployment.html
    # https://docs.confluent.io/current/installation/docker/config-reference.html#zk-configuration
    environment:
      ZOOKEEPER_SERVER_ID: 3 # (required in cluster mode) Sets the server ID in the myid file, which consists of a single line that contains only the text of that machine’s ID.
      ZOOKEEPER_CLIENT_PORT: 2181 # (required) This is the port where ZooKeeper clients will listen on. This is where the Brokers will connect to ZooKeeper.
      ZOOKEEPER_SERVERS: zookeeper1:2888:3888;zookeeper2:2888:3888;zookeeper3:2888:3888
      ZOOKEEPER_TICK_TIME: 2000 # (default: 3000) The unit of time for ZooKeeper translated to milliseconds. This governs all ZooKeeper time dependent operations. It is used for heartbeats and timeouts especially.
      # The initLimit and syncLimit are used to govern how long following ZooKeeper servers can take to initialize with the current leader and how long they can be out of sync with the leader.
      ZOOKEEPER_INIT_LIMIT: 5 # (default: 10)
      ZOOKEEPER_SYNC_LIMIT: 2 # (default: 5)

  #############################################################
  # Confluent Server (Kafka Broker)                           #
  #############################################################
  kafka1:
    image: confluentinc/cp-kafka:${VERSION_CONFLUENT}
    hostname: kafka1
    container_name: kafka1
    restart: always
    ports:
    - 19092:19092
    networks:
      default:
        aliases:
        - kafka
    volumes:
      - kafka1:/var/lib/kafka/data/
    # https://docs.confluent.io/current/installation/configuration/broker-configs.html
    # https://docs.confluent.io/current/installation/docker/config-reference.html#confluent-kafka-configuration
    environment:
      KAFKA_BROKER_ID: 1 # (default: -1) The broker id for this server. If unset, a unique broker id will be generated.
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181 # (required) Instructs Kafka how to get in touch with ZooKeeper.
      KAFKA_CUB_ZK_TIMEOUT: 90 # (default: 40) Docker image setting, which specified the amount of time to wait for Zookeeper. Could be used, to get rid of Docker healthchecks. 
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: HOST:PLAINTEXT,DOCKER:PLAINTEXT,CONTROLLER:PLAINTEXT,REPLICATION:PLAINTEXT # (default: PLAINTEXT:PLAINTEXT,...) Map between listener names and security protocols. In this scenario this setting is used to define listeners with names.
      KAFKA_LISTENERS: HOST://:19092,DOCKER://:9092,CONTROLLER://:9093,REPLICATION://:9094 # (required) List of URIs we will listen on and the listener names. In this case, Kafka listens in both ports on all interfaces.
      KAFKA_ADVERTISED_LISTENERS: HOST://localhost:19092,DOCKER://kafka1.${DOMAIN_NAME}:9092,CONTROLLER://kafka1:9093,REPLICATION://kafka1:9094 # (required) Describes how the host name that is advertised and can be reached by clients. HOST://localhost:19092 enables access from Docker host.
      KAFKA_CONTROL_PLANE_LISTENER_NAME: CONTROLLER # (default: unset) Name of listener used for communication between controller and brokers. By default, no dedicated listener is used.
      KAFKA_INTER_BROKER_LISTENER_NAME: REPLICATION # (default: unset) Name of listener used for communication between brokers.  By default, no dedicated listener is used.
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0 # (default: 3000) The amount of time the group coordinator will wait for more consumers to join a new group before performing the first rebalance. Set to 0 to ensure, that consumers start faster in dev environments.
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false" # (default: true) We disabled auto creation of topics, to ensure that topics are created with the correct configuration. However, if defaults are fine, this could be enabled.
      KAFKA_NUM_PARTITIONS: 3 # (default: 1) The default number of partitions per topic.
      KAFKA_MIN_INSYNC_REPLICAS: 2 # (default: 1) When a producer sets acks to "all" (or "-1"), min.insync.replicas specifies the minimum number of replicas that must acknowledge a write for the write to be considered successful. If this minimum cannot be met, then the producer will raise an exception. 2 is a good setting for HA cluster with high durability requirements.
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3 # (default: 1) Default replication factors for automatically created topics. 3 is a good setting for HA cluster with high durability requirements.
  kafka2:
    image: confluentinc/cp-kafka:${VERSION_CONFLUENT}
    hostname: kafka2
    container_name: kafka2
    restart: always
    ports:
    - 29092:29092
    networks:
      default:
        aliases:
        - kafka
    volumes:
      - kafka2:/var/lib/kafka/data/
    # https://docs.confluent.io/current/installation/configuration/broker-configs.html
    # https://docs.confluent.io/current/installation/docker/config-reference.html#confluent-kafka-configuration
    environment:
      KAFKA_BROKER_ID: 2 # (default: -1) The broker id for this server. If unset, a unique broker id will be generated.
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181 # (required) Instructs Kafka how to get in touch with ZooKeeper.
      KAFKA_CUB_ZK_TIMEOUT: 90 # (default: 40) Docker image setting, which specified the amount of time to wait for Zookeeper. Could be used, to get rid of Docker healthchecks. 
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: HOST:PLAINTEXT,DOCKER:PLAINTEXT,CONTROLLER:PLAINTEXT,REPLICATION:PLAINTEXT # (default: PLAINTEXT:PLAINTEXT,...) Map between listener names and security protocols. In this scenario this setting is used to define listeners with names.
      KAFKA_LISTENERS: HOST://:29092,DOCKER://:9092,CONTROLLER://:9093,REPLICATION://:9094 # (required) List of URIs we will listen on and the listener names. In this case, Kafka listens in both ports on all interfaces.
      KAFKA_ADVERTISED_LISTENERS: HOST://localhost:29092,DOCKER://kafka2.${DOMAIN_NAME}:9092,CONTROLLER://kafka2:9093,REPLICATION://kafka2:9094 # (required) Describes how the host name that is advertised and can be reached by clients. HOST://localhost:19092 enables access from Docker host.
      KAFKA_CONTROL_PLANE_LISTENER_NAME: CONTROLLER # (default: unset) Name of listener used for communication between controller and brokers. By default, no dedicated listener is used.
      KAFKA_INTER_BROKER_LISTENER_NAME: REPLICATION # (default: unset) Name of listener used for communication between brokers.  By default, no dedicated listener is used.
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0 # (default: 3000) The amount of time the group coordinator will wait for more consumers to join a new group before performing the first rebalance. Set to 0 to ensure, that consumers start faster in dev environments.
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false" # (default: true) We disabled auto creation of topics, to ensure that topics are created with the correct configuration. However, if defaults are fine, this could be enabled.
      KAFKA_NUM_PARTITIONS: 3 # (default: 1) The default number of partitions per topic.
      KAFKA_MIN_INSYNC_REPLICAS: 2 # (default: 1) When a producer sets acks to "all" (or "-1"), min.insync.replicas specifies the minimum number of replicas that must acknowledge a write for the write to be considered successful. If this minimum cannot be met, then the producer will raise an exception. 2 is a good setting for HA cluster with high durability requirements.
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3 # (default: 1) Default replication factors for automatically created topics. 3 is a good setting for HA cluster with high durability requirements.
  kafka3:
    image: confluentinc/cp-kafka:${VERSION_CONFLUENT}
    hostname: kafka3
    container_name: kafka3
    restart: always
    ports:
    - 39092:39092
    networks:
      default:
        aliases:
        - kafka
    volumes:
      - kafka3:/var/lib/kafka/data/
    # https://docs.confluent.io/current/installation/configuration/broker-configs.html
    # https://docs.confluent.io/current/installation/docker/config-reference.html#confluent-kafka-configuration
    environment:
      KAFKA_BROKER_ID: 3 # (default: -1) The broker id for this server. If unset, a unique broker id will be generated.
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181 # (required) Instructs Kafka how to get in touch with ZooKeeper.
      KAFKA_CUB_ZK_TIMEOUT: 90 # (default: 40) Docker image setting, which specified the amount of time to wait for Zookeeper. Could be used, to get rid of Docker healthchecks. 
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: HOST:PLAINTEXT,DOCKER:PLAINTEXT,CONTROLLER:PLAINTEXT,REPLICATION:PLAINTEXT # (default: PLAINTEXT:PLAINTEXT,...) Map between listener names and security protocols. In this scenario this setting is used to define listeners with names.
      KAFKA_LISTENERS: HOST://:39092,DOCKER://:9092,CONTROLLER://:9093,REPLICATION://:9094 # (required) List of URIs we will listen on and the listener names. In this case, Kafka listens in both ports on all interfaces.
      KAFKA_ADVERTISED_LISTENERS: HOST://localhost:39092,DOCKER://kafka3.${DOMAIN_NAME}:9092,CONTROLLER://kafka3:9093,REPLICATION://kafka3:9094 # (required) Describes how the host name that is advertised and can be reached by clients. HOST://localhost:19092 enables access from Docker host.
      KAFKA_CONTROL_PLANE_LISTENER_NAME: CONTROLLER # (default: unset) Name of listener used for communication between controller and brokers. By default, no dedicated listener is used.
      KAFKA_INTER_BROKER_LISTENER_NAME: REPLICATION # (default: unset) Name of listener used for communication between brokers.  By default, no dedicated listener is used.
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0 # (default: 3000) The amount of time the group coordinator will wait for more consumers to join a new group before performing the first rebalance. Set to 0 to ensure, that consumers start faster in dev environments.
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false" # (default: true) We disabled auto creation of topics, to ensure that topics are created with the correct configuration. However, if defaults are fine, this could be enabled.
      KAFKA_NUM_PARTITIONS: 6 # (default: 1) The default number of partitions per topic.
      KAFKA_MIN_INSYNC_REPLICAS: 2 # (default: 1) When a producer sets acks to "all" (or "-1"), min.insync.replicas specifies the minimum number of replicas that must acknowledge a write for the write to be considered successful. If this minimum cannot be met, then the producer will raise an exception. 2 is a good setting for HA cluster with high durability requirements.
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3 # (default: 1) Default replication factors for automatically created topics. 3 is a good setting for HA cluster with high durability requirements.

  #############################################################
  # Confluent Schema Registry                                 #
  #############################################################
  schema-registry1:
    image: confluentinc/cp-schema-registry:${VERSION_CONFLUENT}
    hostname: schema-registry1
    container_name: schema-registry1
    restart: always
    ports:
    - 18081:8081
    networks:
      default:
        aliases:
        - schema-registry
    # https://docs.confluent.io/current/schema-registry/installation/config.html
    # https://docs.confluent.io/current/installation/docker/config-reference.html#schema-registry-configuration   
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry1 # (required) The advertised host name. Used for inter schema-registry communication.
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081 # (default: http://0.0.0.0:8081) Comma-separated list of listeners that listen for API requests
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka:9092 # (required) A list of Kafka brokers to connect. If kafkastore.connection.url is not specified, the Kafka cluster containing these bootstrap servers is used both to coordinate Schema Registry instances (primary election) and to store schema data.
      SCHEMA_REGISTRY_CUB_KAFKA_MIN_BROKERS: 3 # (default: 1) Docker image setting, which specifies the minimum numbers of expected brokers to be available. Ensures, that _schemas topic is created with the specified replicas count. Could be used, to get rid of Docker healthchecks. 
      SCHEMA_REGISTRY_CUB_KAFKA_TIMEOUT: 90 # (default: 40) Docker image setting, which specifies the amount of time to wait for Kafka. Could be used, to get rid of Docker healthchecks. 
      SCHEMA_REGISTRY_AVRO_COMPATIBILITY_LEVEL: backward # (default: backward) The Avro compatibility type.
      SCHEMA_REGISTRY_MASTER_ELIGIBILITY: "true" # (default: true) If true, this node can participate in primary election.
      # The following settings are important, if multiple schema registry clusters are operated in a single Kafka cluster.
      # Identifies schema registry cluster, in which each cluster can haf it's own master.
      # Different clustery must have a distinct kafkastore.topic if master.eligibility is set to true.
      #SCHEMA_REGISTRY_SCHEMA_REGISTRY_GROUP_ID: ""  
      #SCHEMA_REGISTRY_KAFKASTORE_TOPIC: _schemas
      # The group id of the KafkaStore consumer. Important when security is enabled. 
      #SCHEMA_REGISTRY_KAFKASTORE_GROUP_ID: ""

  #############################################################
  # Kafka CLI                                                 #
  #############################################################
  kafka-cli:
    image: confluentinc/cp-kafka:${VERSION_CONFLUENT}
    hostname: kafka-cli
    container_name: kafka-cli
    entrypoint: /bin/bash
    tty: true

  kafkacat:
    image: confluentinc/cp-kafkacat:${VERSION_CONFLUENT}
    hostname: kafkacat
    container_name: kafkacat
    entrypoint: /bin/bash
    tty: true

networks:
  default:
    name: ${DOMAIN_NAME}

volumes:
  zookeeper1:
  zookeeper2:
  zookeeper3:
  kafka1:
  kafka2:
  kafka3: